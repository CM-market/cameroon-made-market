server {
    listen 80;
    server_name transac.site www.transac.site;
    return 301 https://$host$request_uri; # Redirect HTTP to HTTPS
}
server {
    listen 443 ssl;
    server_name transac.site www.transac.site;
    ssl_certificate /etc/letsencrypt/live/transac.site/fullchain.pem;
    ssl_certificate_key /etc/letsencrypt/live/transac.site/privkey.pem;
    ssl_protocols TLSv1.2 TLSv1.3;
    ssl_ciphers HIGH:!aNULL:!MD5;
    root /usr/share/nginx/html;
    index index.html;
    location / {server {
    listen 80;
    server_name transac.site www.transac.site;
    return 301 https://$host$request_uri; # Redirect HTTP to HTTPS
}
server {
    listen 443 ssl;
    server_name transac.site www.transac.site;
    ssl_certificate /etc/letsencrypt/live/transac.site/fullchain.pem;
    ssl_certificate_key /etc/letsencrypt/live/transac.site/privkey.pem;
    ssl_protocols TLSv1.2 TLSv1.3;
    ssl_ciphers HIGH:!aNULL:!MD5;
    root /usr/share/nginx/html;
    index index.html;
    location / {
        try_files $uri $uri/ /index.html; # Support React Router
    }
    location /api/ {
        proxy_pass http://backend:8080/; # Proxy API requests to backend
        proxy_set_header Host $host;
        proxy_set_header X-Real-IP $remote_addr;
        proxy_set_header X-Forwarded-For $proxy_add_x_forwarded_for;
        proxy_set_header X-Forwarded-Proto $scheme;
    }
}
        try_files $uri $uri/ /index.html; # Support React Router
    }
    location /api/ {
        proxy_pass http://backend:8080/; # Proxy API requests to backend
        proxy_set_header Host $host;
        proxy_set_header X-Real-IP $remote_addr;
        proxy_set_header X-Forwarded-For $proxy_add_x_forwarded_for;
        proxy_set_header X-Forwarded-Proto $scheme;
    }
}